[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Vilius Gudziunas"]
package-mode = false

[tool.poetry.dependencies]
python = "~3.12"
fastapi = "~0.112.2"
pandas = "~2.2.3"
psycopg2 = "~2.9.9"
pydantic = "^2.9.2"
pydantic-settings = "~2.5.2"
python-multipart = "^0.0.10"
sqlalchemy = "~2.0.35"
uvicorn = "~0.30.6"

[tool.poetry.group.dev.dependencies]
pandas-stubs = "^2.2.2.240909"
ruff = "^0.11.9"
types-psycopg2 = "^2.9.21.20240819"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pyright]
venvPath = "."
venv = ".venv"


[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "E",     # pycodestyle
    "W",     # pycodestyle
    "C90",   # mccabe
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "DJ",    # flake8-django
    "EM",    # flake8-errmsg
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "LOG",   # flake8-logging
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLF",   # flake8-self
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TC",    # flake8-type-checking
    "INT",   # flake8-gettext
    "ARG",   # flake8-unused-arguments
    "PTH",   # flake8-use-pathlib
    "TD",    # flake8-todo
    "FIX",   # flake8-fixme
    "ERA",   # eradicate
    "PD",    # pandas-vet
    "PGH",   # pygrep-hooks
    "PL",    # pylint
    "TRY",   # tryceratops
    "FLY",   # flynt
    "NPY",   # NumPy-specific rules
    "AIR",   # Airflow
    "PERF",  # perflint
    "FURB",  # refurb
    "RUF",   # ruff

    # requires preview mode
    # "CPY",  # flake8-copyright
    # "FAST", # FastAPI

    # not following the coding style
    # "D",   # pydocstyle
]
ignore = [
    "TC001", # typing-only-third-party-import
    "TC003", # typing-only-third-party-import
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.field_validator"]
